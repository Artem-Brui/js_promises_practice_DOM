{"mappings":"ACEA,SAAS,EAAkB,CAAS,CAAE,CAAI,EACxC,IAAM,EAAS,SAAS,aAAa,CAAC,OAEtC,EAAO,YAAY,CAAC,UAAW,gBAC/B,EAAO,SAAS,CAAG,EACnB,EAAO,WAAW,CAAG,EACrB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAYA,AATS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EAGE,SAAS,gBAAgB,CAAC,QAFT,WAAM,OAAA,EAAQ,6B,GAI/B,WAAW,WAAM,OAAA,EAAO,AAAI,MAAM,8BAAgC,EAAA,IACpE,GAIC,IAAI,CAAC,SAAC,CADT,EACiB,OAAA,EAAkB,UAAW,EAC3C,GAAA,KAAK,CAAC,SAAC,CAAP,EAAe,OAAA,EAAkB,QAAS,E,GAW7C,AARS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,IAAM,EAAW,WAAM,OAAA,EAAQ,8B,EAE/B,SAAS,gBAAgB,CAAC,QAAS,GACnC,SAAS,gBAAgB,CAAC,cAAe,EAC3C,GAGc,IAAI,CAAC,SAAC,CAAtB,EAA8B,OAAA,EAAkB,UAAW,E,GAyB3D,AAtBS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,IAAI,EAAc,CAAA,EACd,EAAe,CAAA,EAEb,EAAa,WACb,GAAe,GACjB,EAAQ,6BAEZ,EAEA,SAAS,gBAAgB,CAAC,cAAe,WACvC,EAAe,CAAA,EACf,GACF,GAEA,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAc,CAAA,EACd,GACF,EACF,GAGa,IAAI,CAAC,SAAC,CAArB,EAA6B,OAAA,EAAkB,UAAW,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction buildNotification(className, text) {\n    var newDiv = document.createElement(\"div\");\n    newDiv.setAttribute(\"data-qa\", \"notification\");\n    newDiv.className = className;\n    newDiv.textContent = text;\n    document.body.appendChild(newDiv);\n}\nvar firstPromise = function() {\n    return new Promise(function(resolve, reject) {\n        var callback = function() {\n            return resolve(\"First promise was resolved\");\n        };\n        document.addEventListener(\"click\", callback);\n        setTimeout(function() {\n            return reject(new Error(\"First promise was rejected\"));\n        }, 3000);\n    });\n};\nfirstPromise().then(function(mes) {\n    return buildNotification(\"success\", mes);\n}).catch(function(mes) {\n    return buildNotification(\"error\", mes);\n});\nvar secondPromise = function() {\n    return new Promise(function(resolve, reject) {\n        var callback = function() {\n            return resolve(\"Second promise was resolved\");\n        };\n        document.addEventListener(\"click\", callback);\n        document.addEventListener(\"contextmenu\", callback);\n    });\n};\nsecondPromise().then(function(mes) {\n    return buildNotification(\"success\", mes);\n});\nvar thirdPromise = function() {\n    return new Promise(function(resolve, reject) {\n        var isLeftClick = false;\n        var isRightClick = false;\n        var canResolve = function() {\n            if (isLeftClick && isRightClick) resolve(\"Third promise was resolved\");\n        };\n        document.addEventListener(\"contextmenu\", function() {\n            isRightClick = true;\n            canResolve();\n        });\n        document.addEventListener(\"click\", function() {\n            isLeftClick = true;\n            canResolve();\n        });\n    });\n};\nthirdPromise().then(function(mes) {\n    return buildNotification(\"success\", mes);\n});\n\n//# sourceMappingURL=index.344d6d88.js.map\n","'use strict';\n\nfunction buildNotification(className, text) {\n  const newDiv = document.createElement('div');\n\n  newDiv.setAttribute('data-qa', 'notification');\n  newDiv.className = className;\n  newDiv.textContent = text;\n  document.body.appendChild(newDiv);\n}\n\nconst firstPromise = () => {\n  return new Promise((resolve, reject) => {\n    const callback = () => resolve('First promise was resolved');\n\n    document.addEventListener('click', callback);\n\n    setTimeout(() => reject(new Error('First promise was rejected')), 3000);\n  });\n};\n\nfirstPromise()\n  .then((mes) => buildNotification('success', mes))\n  .catch((mes) => buildNotification('error', mes));\n\nconst secondPromise = () => {\n  return new Promise((resolve, reject) => {\n    const callback = () => resolve('Second promise was resolved');\n\n    document.addEventListener('click', callback);\n    document.addEventListener('contextmenu', callback);\n  });\n};\n\nsecondPromise().then((mes) => buildNotification('success', mes));\n\nconst thirdPromise = () => {\n  return new Promise((resolve, reject) => {\n    let isLeftClick = false;\n    let isRightClick = false;\n\n    const canResolve = () => {\n      if (isLeftClick && isRightClick) {\n        resolve('Third promise was resolved');\n      }\n    };\n\n    document.addEventListener('contextmenu', () => {\n      isRightClick = true;\n      canResolve();\n    });\n\n    document.addEventListener('click', () => {\n      isLeftClick = true;\n      canResolve();\n    });\n  });\n};\n\nthirdPromise().then((mes) => buildNotification('success', mes));\n"],"names":["buildNotification","className","text","newDiv","document","createElement","setAttribute","textContent","body","appendChild","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","then","mes","catch","secondPromise","callback","thirdPromise","isLeftClick","isRightClick","canResolve"],"version":3,"file":"index.344d6d88.js.map"}